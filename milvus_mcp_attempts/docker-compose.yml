version: "3.9"

services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_ENABLE_V2=true
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - ETCD_UNSUPPORTED_ARCH=arm64
    ports:
      - "2379:2379"
    command:
      - etcd
      - --data-dir
      - /etcd-data
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --advertise-client-urls
      - http://etcd:2379
    volumes:
      - etcd-data:/etcd-data

  minio:
    image: minio/minio:RELEASE.2024-03-30T09-41-56Z
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/minio_data
    command: server /minio_data

  standalone:
    image: milvusdb/milvus:v2.2.12
    command: ["milvus", "run", "standalone"]
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    volumes:
      - milvus_data:/var/lib/milvus
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin

  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8000:8000"
    depends_on:
      - standalone
    # ❌ DO NOT mount full /app folder — it erases server.py!
    # ✅ Mount only the tool file if needed (optional)
    # volumes:
    #   - ./mcp-server-milvus/milvus_tools.py:/app/milvus_tools.py
    environment:
      - MILVUS_URI=http://standalone:19530
      - MILVUS_HOST=standalone
      - MILVUS_PORT=19530
      
volumes:
  etcd-data:
  minio_data:
  milvus_data:
